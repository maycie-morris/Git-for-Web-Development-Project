https://codepen.io/mnicoel/pen/wvMymyz?editors=1100

    1. What is Semantic HTML? 
        Semantic HTML gives meaning to different sections of code to whoever
        is looking at the code.

    2. What is HTML used for?
        HTML is used as a blueprint for displaying information on a users
        screen. 

    3. What is an attribute and where do we put it?
        An attribute is used as a way to supply data into an element without
        the code being seen. 

    4. What is the h1 tag used for? How many times should I use it on a page?
        The h1 tag is the first header tag. It should only be used once on
        a page.

    5. Name two tags that have required attributes
        Two tags that require an attribute is the <a> tag and the <img> tag

    6. What do we put in the head of our HTML document?
        We put the code that we do not want to be displayed into the head
        of our HTML. 

    7. What is an id? 
        An id is a title that can only be used once in an element. Like a
        social security number!

    8. What elements can I add an id to? 
        You can add an id to any element.

    9. How many times can I use the same id on a page?
        You can only use an id once on a page.

    10. What is a class?
         A class is like an id however it can be used more than once in an
        element.

    11. What elements can I add a class to?
         You can add a class to any element.

    12. How many times can I use the same class on a page? 
         You can use the same class as many times as you want on a page.

    13. How do I get my link to open in a new tab?
         You get your link to open in a new tab by adding the href target to 
         _blank.

    14. What is the alt attribute in the image tag used for?
         The alt attribute in the image tag is used for alternate text if 
         your image for some reason cannot be displayed.

    15. How do I reference an id?
         You reference an id by using a # followed by the id name.

    16. What is the difference between a section and a div
         The difference between a section and a div is a section represents
         a block or section of related elements while a div can represent a
         section of anything -- related or not.

    17. What is CSS used for?
         CSS is used for designing the visual aspect of HTML for users to 
         view.

    18. How to we select an element? Example - every h2 on the page
         We select an element by typing in the element and following it 
         with curly brackets.

    19. What is the difference between a class and an id? - Give me an example of when I might use each one
         The difference between a class and an id is that a class can be
         used multiple times on a page wheras an id can only be used once. 
         An example of a class can be for paragraphs and an id might be 
         used for a header.

    20. How do we select classes in CSS?
         You select a class in CSS by using a period and then the class name.

    21. How do we select a p element with a single class of “human””?
         You select a p element with a single class of "human" by typing
         .human p { }.

    22. What is a parent child selector? When would this be useful?
         A parent child selector is a selector that first selects a parent
         and then selects all the direct children under the parent tag.
         This would be useful when you have a tag nested within another.

    23. How do you select all links within a div with the class of sidebar?
            You select all links within a div with the class of 'sidebar'
            by typing .sidebar a { }.

    24. What is a pseudo selector?
         A pseudo selector is how you target an element based on an event, e.g. mouse hover

    25. What do we use the change the spacing between lines?
         In order to change the spacing between lines you use the line-height
         property in the CSS section.

    26. What do we use to change the spacing between letters?
         You can use the letter-spacing property to change the spacing
         between letters in CSS.

    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?
         You can use text-transform: uppercase; , lowercase; , capitalize;
         to change all text accordingly.

    28. How do I add a 1px border around my div that is dotted and black?
         You can add a 1px dotted black border around a div by typing
         'div {
             border: 1px dotted black;
         }'

    29. How do I select everything on the page?
         You select everything on the page by typing '* { }'.

    30. How do I write a comment in CSS?
         You write a comment in CSS by typing /* comment */

    31. How do I find out what file I am in, when I am using the command line?
          You can find out what file you are in by using the pwd command.

    32. Using the command line - how do I see a list of files/folders in my current folder?
         You can see a list of files/folders in your current folder by
         typing 'ls'.

    33. How do I remove a file via the command line? Why do I have to be careful with this?
         You remove a file via command line by typing git -rm filename. You
         have to be careful with this because there is no prompt asking if
         you actually want to remove the file and the file also does not go
         into the trash or anywhere else that it can be restored.

    34. Why should I use version control?
         You should use version control because it will keep all past
         versions of code so you can always reference it. This is helpful
         if your code ever crashes to be able to revert back to an older
         version.

    35. How often should I commit to github?
          You should commit to github as soon as you make a meaninful change.

    36. What is the command we would use to push our repo up to github? 
         The command used to push our repo up to github is:
         git push -u branch name.

    37. Walk me through Lambda's git flow.
         Lambda's git flow is as follows:
            1. Fork repo and confirm your name is in front of it.
            2. Add your TL as a collaberator.
            3. Clone repo.
            4. Open terminal and use cd to open location for repo to save.
            5. Use git clone with the copied link.
            6. cd into the repo.
            7. Create your own branch naming it firstname-lastname.
            8. Work on project.
            9. Add and commit changes.
            10. Push changes to github.
            11. Submit a pull request using your branch name as the base 
                repo. 
            12. Add your TL as a reviewer.
            13. Done!

Stretch Questions

    1. What is the difference between an inline element and a block element?
        A block element takes up a full line whereas an inline element
        doesn't take up a whole line (i.e. you can use it in the middle of
        a different code).

    2. What happens when an element is positioned absolutely? 
        If an element is positioned absolutely, the element will be positioned
        to the center of the screen.

    3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width? 
        You make an element take up only the amount of space it needs but also have the
        ability to give it a width by using margin and padding.

    4. Name 3 elements that are diplay block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default
        3 elements that are display block by default are h1, nav, and footer. 3 elements
        that are display inline by default include span, strong, and br. One element that is
        display inline-block by default is img.

    5. In your own words, explain the box model. What is the "fix" for the box model, in other words, how do we make all elements respect the width we've given them? 
        What is meant by the box model is that every element in HTML can be considered it's own
        "box" and therefore in CSS you can break each of the elements up and design them accordingly
        to each box or element by using padding, margins, borders, etc. Using these, we are able to
        make each element respect the width that we assign each one.
